name: Release Magisk Module

on:
  workflow_dispatch:
    inputs:
      bump_version:
        description: 'Update the version number in module.prop'
        required: false
        type: boolean
        default: false
      custom_notes:
        description: 'Custom release notes'
        required: false
        type: string

permissions:
  contents: write # Required for creating releases, commits, tags, and pushes

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Fetch all history for tag creation and versioning

    - name: Setup Build Environment
      run: |
        sudo apt-get update
        sudo apt-get install -y zip jq

    - name: Read Version from module.prop
      id: read_version
      run: |
        VERSION=$(grep '^version=' module/module.prop | cut -d'=' -f2)
        echo "module_version=${VERSION}" >> $GITHUB_OUTPUT

    - name: Create Magisk Module ZIP
      id: create_zip
      run: |
        mkdir -p release
        cd module # Path to the module directory in your repository
        zip -r9 --compression-method store "../release/install.zip" .
        echo "zip_path=$(realpath ../release/install.zip)" >> $GITHUB_OUTPUT
        echo "zip_size=$(du -h ../release/install.zip | cut -f1)" >> $GITHUB_OUTPUT

    - name: Verify ZIP Content
      run: |
        echo "ðŸ“¦ ZIP created successfully: ${{ steps.create_zip.outputs.zip_path }} (${{ steps.create_zip.outputs.zip_size }})"
        unzip -l release/install.zip | head -n 20

    - name: Copy ZIP to Repository Root
      run: cp release/install.zip .

    - name: Update Version in update.json
      run: |
        jq --arg version "${{ steps.read_version.outputs.module_version }}" \
           '.version = $version' update.json > update.json.tmp && mv update.json.tmp update.json

    - name: Commit and Push install.zip to Repository
      run: |
        git config user.name "github-actions"
        git config user.email "actions@github.com"
        git add install.zip update.json
        git commit -m "Release module ${{ steps.read_version.outputs.module_version }}"
        git push origin main

    - name: Create Tag and Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Set release notes
        if [[ "${{ github.event.inputs.custom_notes }}" != "" ]]; then
          RELEASE_NOTES="${{ github.event.inputs.custom_notes }}"
        else
          RELEASE_NOTES="Magisk module release ${{ steps.read_version.outputs.module_version }}"
        fi
        
        # Create and push tag
        git tag ${{ steps.read_version.outputs.module_version }}
        git push origin ${{ steps.read_version.outputs.module_version }}
        
        # Create GitHub release
        gh release create ${{ steps.read_version.outputs.module_version }} \
          install.zip \
          --title "${{ steps.read_version.outputs.module_version }}" \
          --notes "${RELEASE_NOTES}"
        
        echo "âœ… Release created successfully: ${{ steps.read_version.outputs.module_version }}"
